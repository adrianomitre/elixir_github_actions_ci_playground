name: CI Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    name: "${{matrix.otp-version}} / ${{matrix.elixir}} (Erlang/OTP / Elixir)"
    strategy:
      fail-fast: false
      matrix:
        include:
          - otp-version: 18.3.4.11
            elixir: 1.5.3
          - otp-version: 20.3.8.26
            elixir: 1.5.3
          - otp-version: 19.3.6.13
            elixir: 1.6.6
          - otp-version: 21.3.8.16
            elixir: 1.6.6
          - otp-version: 19.3.6.13
            elixir: 1.7.4
          - otp-version: 22.3.4.2
            elixir: 1.7.4
          - otp-version: 20.3.8.26
            elixir: 1.8.2
          - otp-version: 22.3.4.2
            elixir: 1.8.2
          - otp-version: 20.3.8.26
            elixir: 1.9.4
          - otp-version: 22.3.4.2
            elixir: 1.9.4
          - otp-version: 21.3.8.16
            elixir: 1.10.3
          - otp-version: 22.3.4.2
            elixir: 1.10.3
    steps:
      - uses: actions/checkout@v2.3.1
      - uses: actions/setup-elixir@v1.3
        with:
          otp-version: ${{matrix.otp-version}}
          elixir-version: ${{matrix.elixir}}
      - name: Install dependencies
        run: mix deps.get --only test
      - name: Compile dependencies
        run: mix deps.compile
      - name: Compile application
        if: matrix.elixir != '1.10.3'
        run: mix compile
        env:
          MIX_ENV: test
      - name: Compile application treating warnings as errors (only for last Elixir version)
        if: matrix.elixir == '1.10.3'
        run: mix compile --warnings-as-errors
        env:
          MIX_ENV: test
      - name: Run tests
        run: mix test

      - name: Print Erlang/OTP version info
        run: erl -v -eval '{ok, Version} = file:read_file(filename:join([code:root_dir(), "releases", erlang:system_info(otp_release), "OTP_VERSION"])), io:fwrite(Version), halt().'
      - name: Print Elixir version info
        run: elixir -v
